/*11/27/19
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package weatherplantwater;
import java.util.*;
import java.io.*;
import java.net.URL;
import java.net.URLConnection;
import com.google.gson.*;
import com.google.gson.reflect.*;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.scene.control.Button;
/**
 *
 * @author Kelsey
 */
public class apiHandler extends WeatherPlantWater{
    //range output for API
    
    
public void apiHandle(String urlString){    
    try{
        int k;
              StringBuilder result = new StringBuilder();
              URL url = new URL(urlString);
              URLConnection conn = url.openConnection();
              try (BufferedReader rd = new BufferedReader(new InputStreamReader (conn.getInputStream()))) {
                  String line;
                  while ((line = rd.readLine()) != null){
                      result.append(line);
                  }
              }
              
          Map<String, Object > respMap = WeatherPlantWater.jsonToMap(result.toString());
          Map<String, Object > mainMap = (Map<String, Object >)respMap.get("main");
          Map<String, Object > sysMap = (Map<String, Object >)respMap.get("sys");
          String  nameMap = (String) respMap.get("name");
          List<Map<String, Object >> weather = (List<Map<String, Object>>) (respMap.get("weather"));
          Map<String, Object> weatherMap = weather.get(0);
          
         WeatherPlantWater.CityLabel.setText("City: " + nameMap); 
         WeatherPlantWater.CountryLabel.setText("Country: " + sysMap.get("country"));         
         WeatherPlantWater.WeatherDescriptionLabel.setText("Weather Description: "+ weatherMap.get("main"));          
         WeatherPlantWater.TemperatureLabel.setText("Current Temperature: " + mainMap.get("temp") +" F" );
         
         //use weather input to conver to  range of index from 0-1, depending on weather conditions
         Object description =  weatherMap.get("main");
        if (description.equals("Thunderstorm") || description.equals("Snow")||description.equals("Rain") || description.equals("Drizzle") ){
            k=1;
        }            
        else{
            k=0;
        }
          
        //Create Button to complete watering & event handlers to press once you have watered
        waterButton= new Button("Water");
        
        waterButton.setOnAction((EventHandler<ActionEvent>) new WaterButtonHandlerRose());
      
        //Create Button to complete watering
        waterButton2 = new Button("Water");
        waterButton2.setOnAction((EventHandler<ActionEvent>) new WaterButtonHandlerMarigold());
        
        //Create Button to complete watering
        waterButton3 = new Button("Water");
        waterButton3.setOnAction((EventHandler<ActionEvent>) new WaterButtonHandlerPetunia());
          
        
       //weather conditions require water
       if (k == 0){
                           
       
        //Flower 1 Time to Water
       waterButton.setStyle("-fx-base: blue");
      
       //Flower 2 Time to Water
       waterButton2.setStyle("-fx-base: blue");
  
       //Flower 3 Time to Water
       waterButton3.setStyle("-fx-base: blue");
                    }
     //weather conditions don't require watering
     else if (k==1){
    
   
    //Do not need to water any plants today due to weather conditions
        waterButton.setStyle("-fx-base: green");
        waterButton2.setStyle("-fx-base: green");
        waterButton3.setStyle("-fx-base: green");
  
                    }
          }catch (IOException e){
              System.out.println(e.getMessage());
          }
    }

}
